{
  "DataFormats": [
    {},
    {
      "Fields": [
        {
          "Label": "header",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "temp",
          "DecodeString": "x = (x * 175.72/65536) - 46.85",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 2
        },
        {
          "Label": "humidity",
          "DecodeString": "x = (x * 125/256) - 6",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 1
        },
        {
          "Label": "period",
          "DecodeString": "x = x * 2",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "rssi",
          "DecodeString": "x = x -180",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "snr",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x + 150) * 0.01",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 2
        }
      ],
      "Model": "RHF1S001",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "isfull",
          "DecodeString": "x = (x & 0xF0) >> 4",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "isflame",
          "DecodeString": "x = (x & 0x0F) >> 0",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "isfall",
          "DecodeString": "x = (x & 0xF0) >> 4",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "reserved",
          "DecodeString": "x = (x & 0x0F) >> 0",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "airmm",
          "DecodeString": "x = ((x & 0xF000) >> 12) * 1000 + ((x & 0x0F00) >> 8) * 100 + ((x & 0x00F0) >> 4) * 10 + ((x & 0x000F) >> 0) * 1;",
          "DataType": "UInt16BE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        }
      ],
      "Model": "df702",
      "Version": "0.1"
    },
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {},
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 3
        },
        {
          "Label": "windspeed",
          "DecodeString": "x = ((x>>19) & 0x1FFF) /100; (x>0) ? x = (x * 0.5316) + 0.2125 : x = 0 ",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "windgust",
          "DecodeString": "x = ((x>>6) & 0x1FFF) /100; (x>0) ? x = (x * 0.5316) + 0.2125 : x = 0",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "winddir",
          "DecodeString": "x = ((((x & 0x3F)/64) * 360 ) + 270) % 360",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 4,
          "DecimalPlaces": 3
        },
        {
          "Label": "rainmm",
          "DecodeString": "x = x & ~0x8000; x = x * 0.29",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "lastresetcause",
          "DecodeString": "x = (x & 0x8000) >> 15",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "temp",
          "DecodeString": "x = ((x * 256.0) / 65536.0) - 127 ",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 3
        },
        {
          "Label": "pressure",
          "DecodeString": "x = (x * 256.0/65536.0) + 800",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 4
        }
      ],
      "Model": "IOTWeatherStn",
      "Version": "0.2"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 16 / 256) + 8",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "windspeed",
          "DecodeString": "x = ((x>>19) & 0x1FFF) /100 ",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "windgust",
          "DecodeString": "x = ((x>>6) & 0x1FFF) /100 ",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "winddir",
          "DecodeString": "x = ((x & 0x3F)/64) * 360 ",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 4,
          "DecimalPlaces": 3
        },
        {
          "Label": "temp",
          "DecodeString": "x = ((x * 256.0) / 65536.0) - 127 ",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 3
        },
        {
          "Label": "humidity",
          "DecodeString": "x = ((x * 100.0) / 256.0)",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 2
        },
        {
          "Label": "pressure",
          "DecodeString": "x = (x * 256.0/65536.0) + 800",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 4
        }
      ],
      "Model": "USWeatherStn",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "flowrate",
          "DecodeString": "x = x /100 ",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 3
        }
      ],
      "Model": "SeametricsFlowGuage",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 3
        },
        {
          "Label": "windspeed",
          "DecodeString": "x = ((x>>19) & 0x1FFF) /100; (x>0) ? x = (x * 0.5316) + 0.2125 : x = 0 ",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "windgust",
          "DecodeString": "x = ((x>>6) & 0x1FFF) /100; (x>0) ? x = (x * 0.5316) + 0.2125 : x = 0",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "winddir",
          "DecodeString": "x = ((((x & 0x3F)/64) * 360 ) + 270) % 360",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 4,
          "DecimalPlaces": 3
        },
        {
          "Label": "raincumm",
          "DecodeString": "x = x & ~0x8000; x = x * 0.29",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "lastresetcause",
          "DecodeString": "x = (x & 0x8000) >> 15",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "temp",
          "DecodeString": "x = ((x * 256.0) / 65536.0) - 127 ",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 3
        },
        {
          "Label": "pressure",
          "DecodeString": "x = (x * 256.0/65536.0) + 800",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 4
        }
      ],
      "Model": "IOTWeatherStnCuRain",
      "Version": "0.2"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "reading",
          "DecodeString": "x = x & ~0xC000",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "event",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        }
      ],
      "Model": "EndRowSensor0_1p",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.0",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "reading1",
          "DecodeString": "x = x & ~0xC000",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "event1",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading2",
          "DecodeString": "x = x & ~0xC000",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "event2",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        }
      ],
      "Model": "EndRowSensor0_2p",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2.5 / 256) + 2.5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 3
        },
        {
          "Label": "windspeed",
          "DecodeString": "x = ((x>>19) & 0x1FFF) /100; (x>0) ? x = (x * 0.8) + 0.0 : x = 0 ",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "windgust",
          "DecodeString": "x = ((x>>6) & 0x1FFF) /100; (x>0) ? x = (x * 0.8) + 0.0 : x = 0",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "winddir",
          "DecodeString": "x = ((((x & 0x3F)/64) * 360 ) + 0) % 360",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 4,
          "DecimalPlaces": 3
        },
        {
          "Label": "raincumm",
          "DecodeString": "x = x & ~0x8000; x = x * 0.30",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 2
        },
        {
          "Label": "lastresetcause",
          "DecodeString": "x = (x & 0x8000) >> 15",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "temp",
          "DecodeString": "x = ((x * 256.0) / 65536.0) - 127 ",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 3
        },
        {
          "Label": "pressure",
          "DecodeString": "x = (x * 256.0/65536.0) + 800",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 4
        },
        {
          "Label": "humidity",
          "DecodeString": "x = (x * 100.0/256.0)",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "lux",
          "DecodeString": "x = x * 98.7",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 4
        },
        {
          "Label": "uv",
          "DecodeString": "x = (Math.pow(x , 2)/-94475) + (x / 38.465)",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 4
        }
      ],
      "Model": "IOTWeatherStn2",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "nitrate",
          "DecodeString": "x = x ",
          "DataType": "FloatLE",
          "DataLength": 4,
          "IncrementLength": 4,
          "DecimalPlaces": 4
        },
        {
          "Label": "temp",
          "DecodeString": "x = ((x * 256.0) / 65536.0) - 127 ",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 3
        }

      ],
      "Model": "no3demo",
      "Version": "0.1"
    },

    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 16 / 256) + 5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },

        {
          "Label": "setting0",
          "DecodeString": "x = (x & 0x03)",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 closed, 1 open, 3 stop"
        },
        {
          "Label": "setting1",
          "DecodeString": "x = (x & 0x0C)>>2",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 closed, 1 open, 3 stop"

        },
        {
          "Label": "state0",
          "DecodeString": "x = (x & 0x30)>>4",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 closed, 1 open, 2 middle"

        },
        {
          "Label": "state1",
          "DecodeString": "x = (x & 0xC0)>>6",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0,
          "_comment":"0 closed, 1 open, 2 middle"
        },
        {
          "Label": "time0",
          "DecodeString": "x = x",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time1",
          "DecodeString": "x = x",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading1",
          "DecodeString": "x = x & ~0xC000",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "event1",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "uid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        }

      ],
      "Model": "ValveControl_2v",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.0",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "reading1",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state1",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event1",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading2",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state2",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"

        },
        {
          "Label": "event2",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        }
      ],
      "Model": "EndRowSensor1_2p",
      "Version": "0.2"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.0",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "reading1",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state1",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event1",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading2",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state2",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event2",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading3",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state3",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event3",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading4",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state4",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event4",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        }
      ],
      "Model": "EndRowSensor1_4p",
      "Version": "0.2"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.0",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "reading1",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state1",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event1",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading2",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state2",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event2",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading3",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state3",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event3",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading4",
          "DecodeString": "x = x & 0x03FF",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "state4",
          "DecodeString": "x = (x & 0x3000) >> 12",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event4",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time1_1",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time1_2",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time1_3",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time2_1",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time2_2",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time2_3",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time3_1",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time3_2",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time3_3",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time4_1",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time4_2",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time4_3",
          "DecodeString": "((x>0) && (x<65535))? (x = new Date(msg.payload.recv) - x * 8 * 1000) : (x = 0);",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        }



      ],
      "Model": "EndRowSensor1_4p_relt",
      "Version": "0.2"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "seriali",
          "DecodeString": "var buff = Buffer.from(DataMsg.message.substring(DataMsg.ReadPosition,DataMsg.ReadPosition+(4*2)),'hex'); var upper = buff.readUInt32LE(0); x =  x  + (upper * 4294967296); s = String(x).substring(0, 3) +'_' + String(x).substring(3, 15); Object.defineProperty(newpayload,'serials',{value: s,writable: true,enumerable: true,configurable: true});",
          "DataType": "UInt32LE",
          "DataLength": 4,
          "IncrementLength": 4,
          "DecimalPlaces": 0
        }

      ],
      "Model": "rfiddemo",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.0",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },
        {
          "Label": "angle",
          "DecodeString": "x = x * 90 / 256",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 1
        },
        {
          "Label": "state",
          "DecodeString": "x = (x & 0x30) >> 4",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 undefined, 1 wet, 2 dry"
        },
        {
          "Label": "event",
          "DecodeString": "x = (x & 0xC0) >> 6",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0,
          "_comment":"0: no change, 1: change to wet(upright), 2: change to dry(sideways)"

        }

      ],
      "Model": "troughlevel",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 16 / 256) + 5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 4
        },

        {
          "Label": "setting0",
          "DecodeString": "x = (x & 0x03)",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 closed, 1 open, 3 stop"
        },
        {
          "Label": "setting1",
          "DecodeString": "x = (x & 0x0C)>>2",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 closed, 1 open, 3 stop"

        },
        {
          "Label": "state0",
          "DecodeString": "x = (x & 0x30)>>4",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 0,
          "DecimalPlaces": 0,
          "_comment":"0 closed, 1 open, 2 middle"

        },
        {
          "Label": "state1",
          "DecodeString": "x = (x & 0xC0)>>6",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0,
          "_comment":"0 closed, 1 open, 2 middle"
        },
        {
          "Label": "time0",
          "DecodeString": "x = x",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "time1",
          "DecodeString": "x = x",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "reading1",
          "DecodeString": "x = x & ~0xC000",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 0,
          "DecimalPlaces": 0
        },
        {
          "Label": "event1",
          "DecodeString": "x = (x & 0xC000) >> 14",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "uid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "status",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        }


      ],
      "Model": "ValveControl_2v2",
      "Version": "0.1"
    },
    {
      "Fields": [
        {
          "Label": "formatid",
          "DecodeString": "",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 0
        },
        {
          "Label": "battery",
          "DecodeString": "x = (x * 2 / 256) + 2.5",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 3
        },

        {
          "Label": "heightmm",
          "DecodeString": "x = x",
          "DataType": "UInt16LE",
          "DataLength": 2,
          "IncrementLength": 2,
          "DecimalPlaces": 0
        },
        {
          "Label": "temp",
          "DecodeString": "x = (x/2.0)-20",
          "DataType": "UInt8",
          "DataLength": 1,
          "IncrementLength": 1,
          "DecimalPlaces": 2
        }

      ],
      "Model": "us_level_1v1",
      "Version": "0.1"
    }

  ],
  "Version": "0.21",
  "Date": "25/05/2018"
}
